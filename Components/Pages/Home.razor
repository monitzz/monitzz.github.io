@page "/"
@using Portfolio.Components.Layout

<PageTitle>Portfólio</PageTitle>

<div class="d-flex flex-row justify-content-around align-items-center">
    <div class="d-flex flex-column" style="width: 30em">
        <h1 class="bolder">Igor Borges Kühl</h1>
        <h4>Desenvolvedor de Software</h4>
        <p class="my-4">Estudo por conta própria pela internet com foco no aprendizado para desenvolver páginas web e aplicativos cada vez melhores!</p>
        <div class="social d-flex flex-column">
            <p class="fw-bolder">Contatos:</p>
            @foreach (var info in ContactInfo)
            {
                @for (int i = 0; i < info.Titles.Length; i++)
                {
                    <ContactLink
                        IconPath="@info.IconPaths[i]" 
                        Title="@info.Titles[i]"
                        Url="@info.Urls[i]"
                        Text="@info.Texts[i]"
                    />
                }
            }
        </div>
    </div>
    <ProfilePicture />
</div>


<div class="language-container d-flex flex-row justify-content-evenly text-center">
    @foreach (var info in LanguageInfos)
    {
        @for (int i = 0; i < info.Titles.Length; i++)
        {
            <LanguageBlock
                Label="@info.Labels[i]"
                IconPaths="@info.IconPaths[i]"
                Titles="@info.Titles[i]"
            />
        }
    }
</div>

<div class="poject-displays" style="margin-left: 7rem">
    <h3 class="pb-3">Projetos</h3>
    @foreach (var info in ProjectInfos)
    {
        @for (int i = 0; i < info.Titles.Length; i++)
        {
            <ProjectDisplay
                Title="@info.Titles[i]"
                Description="@info.Descriptions[i]"
                ImagePath="@info.ImagePaths[i]"
                ProjectLink="@info.ProjectLinks[i]"
                DeployedLink="@info.Descriptions[i]"
            />
        }
    }
</div>

@code
{
    private List<Contact> ContactInfo = new List<Contact>();
    private List<LanguageBlockInfo> LanguageInfos = new List<LanguageBlockInfo>();
    private List<ProjectDisplayInfo> ProjectInfos = new List<ProjectDisplayInfo>();

    protected override void OnInitialized()
    {
        ContactInfo.Add(new Contact
        {
            IconPaths = new[]
            {
                "discord.svg",
                "instagram.svg",
                "whatsapp.svg",
                "github.svg"
            },
            Titles = new[]
            {
                "Discord",
                "Instagram",
                "WhatsApp",
                "GitHub"
            },
            Urls = new[]
            {
                "https://discord.com/users/1201863684117504020",
                "https://www.instagram.com/igor.borgesk/",
                "https://wa.me/5551995826812",
                "https://github.com/monitzz"
            },
            Texts = new[]
            {
                "igorbkuhl",
                "igor.borgesk",
                "+55 51 99582-6812",
                "monitzz"
            }
        });

        LanguageInfos.Add(new LanguageBlockInfo
        {
            Labels = new[]
            {
                "Tenho conhecimento em",
                "Pretendo estudar"
            },
            IconPaths = new[]
            {
                new[] {"c-sharp.svg", "blazor.svg", "react.svg", "vue.svg", "javascript.svg", "html.svg", "css.svg"},
                new[] {"aspdotnet.svg", "sql.svg", "c.svg"}
            },
            Titles = new[]
            {
                new[] {"C#", "Blazor", "React", "Vue", "JavaScript", "HTML", "CSS"},
                new[] {"ASP.NET", "SQL", "C"}
            },
        });

        ProjectInfos.Add(new ProjectDisplayInfo
        {
            Titles = new[]
            {
                "Gerador de cores",
                "Jogo da velha",
                "Gerador de senhas",
                "Portfólio"
            },
            Descriptions = new[]
            {
                "Este projeto gera cores aleatórias em RGB e as converte para outros códigos de cores, basta apenas clicar no botão.",
                "Um jogo que é aberto no terminal. Escolha X ou O e onde deseja colocar. Divirta-se. :)",
                "Um simples gerador de senhas. As senhas são geradas com 15 caracteres por padrão mas o comprimento pode ser ajustado no código. Todas as senhas são armazenadas no arquivo .txt, caso precise consultá-las depois.",
                "E por último mas não menos importante, esta página de portfólio em que você está agora. :)"
            },
            ImagePaths = new[]
            {
                "images/projects/color-generator.png",
                "images/projects/tic-tac-toe.png",
                "images/projects/password-generator.png",
                "images/projects/portfolio.png"
            },
            ProjectLinks = new[]
            {
                "https://github.com/monitzz/color-generator",
                "https://github.com/monitzz/tic-tac-toe",
                "https://github.com/monitzz/password-generator",
                "https://github.com/monitzz/portfolio"
            },
            DeployedLinks = new[]
            {
                "https://color-generator-gqnc8z0th-igor-borges-projects-6e496d8b.vercel.app",
                "https://replit.com/join/yoieqhxyag-igorbkuhl",
                "https://replit.com/join/lgjoasfsjg-igorbkuhl",
                "#"
            }
        });
    }
}
